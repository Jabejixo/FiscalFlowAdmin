// <auto-generated />
using System;
using FiscalFlowAdmin.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FiscalFlowAdmin.Migrations
{
    [DbContext(typeof(FiscalFlowDatabaseContext))]
    [Migration("20241127002504_EnableCascadeDelete")]
    partial class EnableCascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FiscalFlowAdmin.Model.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("balance");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("currency_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint")
                        .HasColumnName("profile_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CurrencyId" }, "finances_ap_currenc_17b09c_idx");

                    b.HasIndex(new[] { "ProfileId" }, "finances_ap_profile_a16c59_idx");

                    b.HasIndex(new[] { "CurrencyId" }, "finances_app_bill_currency_id_88fc4021");

                    b.HasIndex(new[] { "ProfileId" }, "finances_app_bill_profile_id_f1838735");

                    b.ToTable("finances_app_bill");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Credit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("amount");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint")
                        .HasColumnName("bill_id");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("interest_rate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<decimal>("PaidAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("paid_amount");

                    b.Property<decimal>("RemainingAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("remaining_amount");

                    b.Property<int>("Term")
                        .HasColumnType("integer")
                        .HasColumnName("term");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BillId" }, "finances_ap_bill_id_444031_idx");

                    b.HasIndex(new[] { "BillId" }, "finances_app_credit_bill_id_d22a52cd");

                    b.ToTable("finances_app_credit");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("name");

                    b.Property<decimal>("Value")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("finances_app_currency");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DailyCategoryExpense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<long>("DailyReportId")
                        .HasColumnType("bigint")
                        .HasColumnName("daily_report_id");

                    b.Property<decimal>("ExpenseAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("expense_amount");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "finances_ap_categor_1843f5_idx");

                    b.HasIndex(new[] { "DailyReportId" }, "finances_ap_daily_r_36cd3e_idx");

                    b.HasIndex(new[] { "CategoryId" }, "finances_app_dailycategoryexpense_category_id_c1b2af05");

                    b.HasIndex(new[] { "DailyReportId" }, "finances_app_dailycategoryexpense_daily_report_id_ee07bcdc");

                    b.ToTable("finances_app_dailycategoryexpense");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DailyReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint")
                        .HasColumnName("profile_id");

                    b.Property<decimal>("TotalExpense")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("total_expense");

                    b.Property<decimal>("TotalIncome")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("total_income");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProfileId" }, "finances_ap_profile_af7197_idx");

                    b.HasIndex(new[] { "ProfileId" }, "finances_app_dailyreport_profile_id_cdac02f8");

                    b.ToTable("finances_app_dailyreport");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Debt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("amount");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint")
                        .HasColumnName("bill_id");

                    b.Property<string>("Debtor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("debtor");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BillId" }, "finances_ap_bill_id_83d405_idx");

                    b.HasIndex(new[] { "BillId" }, "finances_app_debt_bill_id_c93ab690");

                    b.ToTable("finances_app_debt");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DeviceToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint")
                        .HasColumnName("profile_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProfileId" }, "authentication_devicetoken_profile_id_0fbaea76");

                    b.ToTable("authentication_devicetoken");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.MonthlyExpense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("amount");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint")
                        .HasColumnName("bill_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateOnly>("NextPaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("next_payment_date");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("period");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BillId" }, "finances_ap_bill_id_746c78_idx");

                    b.HasIndex(new[] { "BillId" }, "finances_app_monthlyexpense_bill_id_37680f98");

                    b.ToTable("finances_app_monthlyexpense");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<TimeOnly?>("SendTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("send_time");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.ToTable("reminders_notification");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.NotificationProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("NotificationId")
                        .HasColumnType("bigint")
                        .HasColumnName("notification_id");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint")
                        .HasColumnName("profile_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NotificationId", "ProfileId" }, "reminders_notification_p_notification_id_profile__a95e6e84_uniq")
                        .IsUnique();

                    b.HasIndex(new[] { "NotificationId" }, "reminders_notification_profiles_notification_id_3654fc2b");

                    b.HasIndex(new[] { "ProfileId" }, "reminders_notification_profiles_profile_id_b218a596");

                    b.ToTable("reminders_notification_profiles");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "authentication_profile_user_id_key")
                        .IsUnique();

                    b.ToTable("authentication_profile");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("amount");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint")
                        .HasColumnName("bill_id");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BillId" }, "finances_ap_bill_id_f7f665_idx");

                    b.HasIndex(new[] { "CategoryId" }, "finances_ap_categor_75baae_idx");

                    b.HasIndex(new[] { "BillId" }, "finances_app_transaction_bill_id_9a0a9218");

                    b.HasIndex(new[] { "CategoryId" }, "finances_app_transaction_category_id_113b376f");

                    b.ToTable("finances_app_transaction");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.TransactionCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsIncome")
                        .HasColumnType("boolean")
                        .HasColumnName("is_income");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("finances_app_transactioncategory");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsConfirmedEmail")
                        .HasColumnType("boolean")
                        .HasColumnName("is_confirmed_email");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("boolean")
                        .HasColumnName("is_staff");

                    b.Property<bool>("IsSuperuser")
                        .HasColumnType("boolean")
                        .HasColumnName("is_superuser");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "authentication_user_email_key")
                        .IsUnique();

                    b.ToTable("authentication_user");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Bill", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiscalFlowAdmin.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Credit", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DailyCategoryExpense", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.TransactionCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiscalFlowAdmin.Model.DailyReport", "DailyReport")
                        .WithMany("FinancesAppDailycategoryexpenses")
                        .HasForeignKey("DailyReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("DailyReport");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DailyReport", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Debt", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DeviceToken", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.MonthlyExpense", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.NotificationProfile", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiscalFlowAdmin.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Profile", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.Transaction", b =>
                {
                    b.HasOne("FiscalFlowAdmin.Model.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiscalFlowAdmin.Model.TransactionCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FiscalFlowAdmin.Model.DailyReport", b =>
                {
                    b.Navigation("FinancesAppDailycategoryexpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
